# open a "scratchpad" terminal (quake-style, in this case, on a 1366x768 display)
# F12
#   xdotool search --onlyvisible --classname URxvtQuake windowunmap \
#       || xdotool search --classname URxvtQuake windowmap \
#           || urxvt -name URxvtQuake -geometry 110x20+297+1
#
#

# terminal emulator
super + z
	urxvt

super + b
    google-chrome-stable

super + x
	bspc node -c

super + e
	urxvt -e ranger

# launch vim
supet + v
	urxvt -e vim

# program launcher
super + space
	dmenu_run

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

# quit bspwm normally
super + alt + Escape
	bspc quit

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next


# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# focus the node in the given direction
super + {_,shift + }{Left,Down,Up,Right}
	bspc node -{f,s} {west,south,north,east}



# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'
xdo move {-x -20,-y +20,-y -20,-x +20}

# focus
~button1
	bspc pointer -g focus

# start move/resize
super + button{1-3}
	; bspc pointer -g {move,resize_side,resize_corner}

# end move/resize
super + @button{1-3}
	bspc pointer -u

# trash restore
Insert
	float-trash.sh

# configs

F1
	cd /home/foibles/Drive/Development/Scripts && urxvt -e ranger
F2
	urxvt -e vim ~/.config/bspwm/bspwmrc
F5
	urxvt -e vim ~/.config/ranger/rc.conf
F3
	urxvt -e vim ~/.config/sxhkd/sxhkdrc
F4
	urxvt -e vim ~/.vimrc	
F8
	urxvt -e vim ~/.xinitrc
F7
	urxvt -e vim ~/.Xresources
F6
	urxvt -e vim ~/.zshrc

# open a "scratchpad" terminal (quake-style, in this case, on a 1366x768 display)
F12
  xdotool search --onlyvisible --classname URxvtQuake windowunmap \
    || xdotool search --classname URxvtQuake windowmap \
    || urxvt -name URxvtQuake -geometry 110x20+297+1




# some simple notifications in lieu of a systray
# might be better to dedicate a desktop to system performance

# show acpi output (battery status)
super + a
    notify-send -t 5000 "`acpi`"

# show current date/time
super + d
    notify-send -t 5000 "`date +'%H:%M   %a, %d %b %Y'`"

# close/kill window
super + w
	bspc window -c

# insync status
super + i
    insync get_status | xargs -0 notify-send  

# show output of periodically run update-checking script
# super + u
#    notify-send -t 5000 "`cat /var/local/updates-available-sh.info`"


# media keys
XF86AudioLowerVolume
	amixer set Master 5%-

XF86AudioRaiseVolume
	amixer set Master 5%+

XF86AudioMicMute
	amixer set Master toggle
